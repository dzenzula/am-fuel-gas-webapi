basePath: /am-fuel-gas-webapi
definitions:
  models.AuthUserData:
    properties:
      authStatus:
        type: integer
      displayName:
        type: string
      domain:
        type: string
      name:
        type: string
      permission:
        items:
          $ref: '#/definitions/models.MyPermission'
        type: array
      type:
        type: string
    type: object
  models.GetManualFuelGas:
    properties:
      description:
        type: string
      id:
        type: integer
      lastUpdateDate:
        type: string
      name:
        type: string
      tag:
        type: string
      timestamp:
        type: string
      updateHistory:
        items:
          $ref: '#/definitions/models.UpdateHistory'
        type: array
      value:
        type: number
    type: object
  models.MyPermission:
    properties:
      name:
        type: string
      permission:
        type: integer
    type: object
  models.SetManualFuelGas:
    properties:
      date:
        type: string
      id:
        type: integer
      tag:
        type: string
      value:
        type: number
    type: object
  models.UpdateHistory:
    properties:
      TimestampInsert:
        type: string
      Value:
        type: string
    type: object
  models.UserData:
    properties:
      domain:
        type: string
      login:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/Authorization/GetCurrentUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthUserData'
      tags:
      - Authorization
  /api/Authorization/LogInAuthorization:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: userdata
        required: true
        schema:
          $ref: '#/definitions/models.UserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthUserData'
      tags:
      - Authorization
  /api/Authorization/LogOutAuthorization:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Authorization
  /api/GetParameters:
    get:
      consumes:
      - application/json
      parameters:
      - description: Дата получения параметров
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetManualFuelGas'
      tags:
      - Parameters
  /api/SetParameters:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные газ
        in: body
        name: userdata
        required: true
        schema:
          $ref: '#/definitions/models.SetManualFuelGas'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Parameters
swagger: "2.0"
